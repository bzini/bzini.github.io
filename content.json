{"meta":{"title":"Hexo","subtitle":"","description":"","author":"Bzini Ler","url":"http://yoursite.com","root":"/"},"pages":[],"posts":[{"title":"Git&Github入门","slug":"Git&Github入门","date":"2020-04-22T01:53:48.996Z","updated":"2020-04-23T05:22:38.222Z","comments":true,"path":"2020/04/22/Git&Github入门/","link":"","permalink":"http://yoursite.com/2020/04/22/Git&Github%E5%85%A5%E9%97%A8/","excerpt":"Git 是一个开源的分布式版本控制系统，用于敏捷高效地处理任何或小或大的项目","text":"Git 是一个开源的分布式版本控制系统，用于敏捷高效地处理任何或小或大的项目 Git安装 官网安装路径 https://git-scm.com/downloads 安装成功的标志 在桌面右键出现以下标志 初始化配置 设置用户名的邮箱 git config –global user.name “用户名” git config –global user.email 邮箱 查询用户名、邮箱 git config –list git底层命令 git init 新建并初始化git仓库，文件夹中会出现.git隐藏文件夹，文件中详情如图 git hash-object -w –stdin 向数据库写入数据，写入数据保存在object目录中 -w：选项提示hash-object命令储存数据库对象，即保存无object文件夹中,不指定的话，该命令仅返回对应的键值 –stdin(standrad input)：选项该命令从标准输出文件，不指定需在命令结尾给出存储文件路径 将当前目录的txtv1.txt保存到object中 git cat-file -t d82701a8032724129cee3773f14d5e86dc47a46a 输出哈希值对应的事件类型 -t：type，输出类型 -p：print，输出哈希对应的数据内容blob类型输出文件的内容tree类型输出git对象 git ls-files -s 查看缓存区 git update-index –add –cacheinfo 10064 d4d820f31f39d912b67c2f93a19d248f70a5daf7 hello.txt 将text.txt创建一个缓冲区，将d4d820f31f39d912b67c2f93a19d248f70a5daf7于text.txt对应 –add：此前该文件没有缓存区，–add创建缓存区 –cacheinfo：指定要添加的文件位于git数据库中，而不是当前目录 文件模式100644:普通文件100755:可执行文件120000:符号链接 git write-tree 将缓存区中的数据保存到git数据库中,并生成树对象 echo “this is my first commit”|git commit-tree d82701a8032724129cee3773f14d5e86dc47a46a 将树对象（只能是树对象）提交为提交对象 “this is my first commit”：设置提交的备注 git高级命令 git add hello.txt 跟踪hello.txt文件,相当于将hello.txt文件转成git对象保存到git数据库并添加到缓存区 git commit -m “hello 的第一个版本” 将缓存区的数据提交写成tree对象并将tree对象提交，生成commit对象 -a：跳过缓存区直接提交 git status world.txt 查看文件的状态, 文件状态分为未跟踪、已跟踪两种状态 已跟踪又分为已暂存、已修改、已提交三种状态 未跟踪状态 跟踪已暂存 跟踪已提交 跟踪已修改 git diff 查看修改内容 不加参数，查看做了哪些更新没有暂存 –cached、–staged（1.6.1版本以上）：查看更新并添加到缓存准备提交 git log 查看日志显示提交记录 –pretty=online：数据一行显示 –online：一行哈希部分显示","categories":[],"tags":[]},{"title":"Linux入门","slug":"Linux入门","date":"2020-04-21T02:53:27.197Z","updated":"2020-04-22T01:58:01.564Z","comments":true,"path":"2020/04/21/Linux入门/","link":"","permalink":"http://yoursite.com/2020/04/21/Linux%E5%85%A5%E9%97%A8/","excerpt":"Linux小白入门，远程连接Linux，Linux常用命令","text":"Linux小白入门，远程连接Linux，Linux常用命令 远程连接 远程连接的原因 作为服务器系统，安装Linux的机器一般存放在机房，由于机房的特殊环境，工作人员不可能到机房操作，一般通过远程连接操作Linux系统.远程连接工具多种，这里选择xshell进行演示 xshell的安装 官网连接 https://xshell.en.softonic.com/ 获得Linux的IP地址 ssh命令连接Linux 输入Linux用户密码完成连接 Linux命令 命令格式（ls） 命令 空格 参数（可选） 空格 文件夹（可选） ls列出文件夹内容 -a显示所有文件及隐藏文件 /opt查询根目录opt文件夹 常用查询命令及作用以下只列出常用命令，常用参数 命令 参数 作用 ls a 显示所有文件l显示文件夹中文件的详情 查询文件夹信息 cat 读取文件信息并在终端输出 pwd 显示当前绝对路径 常用文件夹文件操作命令 命令 作用 mkdir 创建文件夹 touch 创建文件 vim 编辑文件 功能性命令 命令 使用 作用 cd 相对路径或绝对路径 ..返回上一级.当前目录 ~用户家目录 /根目录 切换目录 cp cp 源文件 目标位置 将源文件复制一份到目标位置文件夹中 mv mv 源文件 目标位置cp 源文件 新名称 对文件进行移动或改名 rm rm 文件名rm -r 文件夹 删除文件删除文件夹 用户管理命令 命令 作用 useradd 添加用户 usermod 改变用户信息 userdel 删除用户及配置文件 passwd 修改用户密码 id 查看用户UID、GID、组信息 su 切换用户 sudo 用管理员身份执行命令 visudo 编辑sudoers配置文件 三剑客grep、sed、awk grep 作用 文本搜索工具，根据用户指定的模式（过滤条件）对目标文本进行匹配检查，打印匹配到的行 语法 grep [参数] [过滤条件] 文件 参数 i：忽略字符的大小写o：仅匹配到字符本身v：显示不能被匹配到行e：支持使用正则表达式元字符E：使用egrep命令c：只统计匹配的行数n：显示匹配行和行号 sed 作用 操作、过滤、转换文本的流编辑器，匹配使用单引号 语法 sed [参数] [sed内置命令字符] [输入文件] 参数 n：取消默认输出，与内置命令p一起使用i：直接将结果写入文件，不用-i，sed修改的是内存数据e：多次编辑，不需要用管道符r：支持正则表达式 内置命令 对文件进行不同的操作，如增删改查a：append,对文本进行追加，在指定行后面添加一行、多行文本d：delete，删除匹配行i：insert，插入文本，在指定行前添加一行、多行文本p：print,打印匹配行的内容，通常与-n一起用s/正则/替换内容/g：匹配正则表达式并替换，g表示全局替换 注意 sed 匹配使用单引号 awk 作用 根据用户指定分隔符（默认空格）按行处理文件 语法 awk [参数] [内置变量] {动作} 文件/数据 动作action awk擅长格式化文本，且输出格式化的结果，因此最常用动作就是print和pritf如：awk ‘{print $2}’ 按空格分割取出文本第二列 参数 F：指定分隔符v：定义或修改awk内部的变量f：从脚本文件读取awk命令 内置变量 $n：表示匹配第n列，$2表示第二列NF：分割后当前行字段数NR：当前行数，记实数 注意 awk 匹配外层单引号,内层使用双引号如：awk ‘{print “第一列：”,$1}’ 输出第一列，”,”表示用空格隔开 文件权限 三种权限 权限范围 u：属主 g：属组 o：其他人 权限修改命令 chmod 范围+-权限名 文件名如 chmod u+r hello.txt 给hello.txt文件添加属主读权限 chmod o-x hello.txt 给hello.txt文件消除其他人的执行权限","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2020-04-20T01:40:22.938Z","updated":"2020-04-22T01:58:03.762Z","comments":true,"path":"2020/04/20/hello-world/","link":"","permalink":"http://yoursite.com/2020/04/20/hello-world/","excerpt":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}],"categories":[],"tags":[]}